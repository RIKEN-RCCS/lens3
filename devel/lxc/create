#! /bin/sh

#set -o xtrace
set -o errexit
set -o nounset

. ./config
. ./subr

cmd=""
if [ $# = 1 ]; then
	cmd=$1
fi

main() {
	if [ -z "$cmd" ]; then
		create_storage
		launch_containers
		configure_network
		common_settings
		wildcard_dns
		sleep 10
		update_all
		common_tools
	else
		"$cmd"
	fi
}

create_storage() {
	create_storage_host "$data"
}

launch_containers() {
	for c in $containers; do
		launch "$c"
	done
}

configure_network() {
	for c in $containers; do
		eval address="\$${c}_address"
		network_attach "$c" "$address" "$network"
	done
}

common_settings() {
	for c in $containers; do
		ec $c rm /etc/localtime
		ec $c ln -s $localtime /etc/localtime
		for u in $administrators; do
			eval group="\$${u}_group"
			eval uid="\$${u}_uid"
			eval gid="\$${group}_gid"
			eval addgrp="\$${u}_addgrp"
			eval pw="\$${u}_pw"
			groupadd_container "$c" "$group" "$gid"
			useradd_container "$c" "$u" "$uid" "$group" "$pw"
			[ -z "$addgrp" ] || usermod_container "$c" "$u" "$addgrp"
		done

		ec "$c" sed -i -e '/^# %wheel	ALL=(ALL)	NOPASSWD: ALL/s/# //' -e '/^%wheel	ALL=(ALL)	ALL/s/^/# /' /etc/sudoers

		echo "local7.*				/var/log/local7" |
			ec $c dd of=/etc/rsyslog.d/99-local7.conf 2>/dev/null
		ec $c touch /var/log/local7
		# on centos, the following two lines will fail
		if [ -n "$syslog_usr" ]; then
			ec $c chown $syslog_usr /var/log/local7
		fi
		if [ -n "$syslog_grp" ]; then
			ec $c chgrp $syslog_grp /var/log/local7
		fi
		ec $c systemctl restart rsyslog
		tmpfile=$(mktemp) || exit 1
### Ubuntu
#		ec $c cat /etc/logrotate.d/rsyslog >$tmpfile
#		sed '/^\/var\/log\/messages$/s;$;/var/log/local7;' $tmpfile | tr  \\n |
#			ec $c dd of=/etc/logrotate.d/rsyslog 2>/dev/null
#		rm $tmpfile
### end Ubuntu
		device_add_container "$c" "$data" /home shared
	done
}

wildcard_dns() {
	set_wildcard_dnsmasq "$wildcard_hostname" "$Re_address"
}

update_all() {
	for c in $containers; do
		ec "$c" dnf -qq update -y
		ec "$c" dnf -qq upgrade -y
### Ubuntu
#		ec "$c" apt-get -qq update -y
#		ec "$c" apt-get -qq upgrade -y 2>/dev/null
#		ec "$c" apt-get -qq update -y
### end Ubuntu
	done
}

common_tools() {
	for c in $containers; do
		ec "$c" dnf -qq groupinstall -y "Development Tools"
		ec "$c" dnf -qq install -y openssh-server
		ec "$c" systemctl enable sshd
		ec "$c" systemctl start sshd
		ec "$c" dnf -qq install -y bind-utils
	done

	print_ssh_config $containers
}

install_lenticularis() {
	iadm=$administrator
	ladm=admin
	for c in $containers; do
		tmpdir=$(ec "$c" sudo -u $iadm mktemp -d)
		(cd $srcdir && tar cf - .) | ec "$c" sh -c "(cd $tmpdir && tar xfp -)"
		installdir=$tmpdir/devel/install
		ec "$c" sudo -u $iadm sh -c "(cd $installdir && ./common)"
		ec "$c" sudo -u $iadm sh -c "(cd $installdir && ./hosts)"
		ec "$c" sudo -u $iadm sh -c "(cd $installdir && ./disable_firewall)"
		ec "$c" sudo -u $iadm sh -c "(cd $installdir && ./redis)"
		ec "$c" sudo -u $iadm sh -c "(cd $installdir && ./reverseproxy)"
		ec "$c" sudo -u $iadm sh -c "(cd $installdir && ./admin)"
		ec "$c" sudo -u $iadm sh -c "(cd $installdir && ./multiplexer)"
		ec "$c" sudo -u $iadm sh -c "(cd $installdir && ./create_users)"
		ec "$c" sudo -u $ladm sh -c "(cd $installdir && ./uinfo)"
		ec "$c" sudo -u $iadm rm -rf $tmpdir
	done
}

main
